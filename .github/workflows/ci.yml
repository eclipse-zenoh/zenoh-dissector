name: CI

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]
  schedule:
    - cron: "0 6 * * 1-5"

jobs:
  markdown_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: DavidAnson/markdownlint-cli2-action@v18
        with:
          config: '.markdownlint.yaml'
          globs: '**/README.md'

  ci_macos:
    uses: ./.github/workflows/macos.yml

  ci_windows:
    uses: ./.github/workflows/windows.yml

  ci_ubuntu:
    uses: ./.github/workflows/ubuntu.yml

  check_rust:
      name: Check ${{ github.repository }} using Rust 1.75
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
      steps:
        - name: Clone this repository
          uses: actions/checkout@v4

        - name: Update Rust 1.75.0 toolchain
          run: rustup update 1.75.0

        - name: Setup rust-cache
          uses: Swatinem/rust-cache@v2
          with:
            cache-bin: false

        - name: Check ${{ github.repository }} with rust 1.75.0
          run: |
            cargo +1.75.0 check --release --bins --lib

  # NOTE: In GitHub repository settings, the "Require status checks to pass
  # before merging" branch protection rule ensures that commits are only merged
  # from branches where specific status checks have passed. These checks are
  # specified manually as a list of workflow job names. Thus we use this extra
  # job to signal whether all CI checks have passed.
  ci:
    name: CI status checks
    runs-on: ubuntu-latest
    needs: [check_rust, ci_macos, ci_windows, ci_ubuntu, markdown_lint]
    if: always()
    steps:
      - name: Check whether all jobs pass
        run: echo '${{ toJson(needs) }}' | jq -e 'all(.result == "success")'
