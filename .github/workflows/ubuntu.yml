#
# Copyright (c) 2023 ZettaScale Technology
#
# This program and the accompanying materials are made available under the
# terms of the Eclipse Public License 2.0 which is available at
# http://www.eclipse.org/legal/epl-2.0, or the Apache License, Version 2.0
# which is available at https://www.apache.org/licenses/LICENSE-2.0.
#
# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0
#
# Contributors:
#   ZettaScale Zenoh Team, <zenoh@zettascale.tech>
#
name: CI (Ubuntu)

on:
  workflow_call:

env:
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
  DEBIAN_FRONTEND: noninteractive
  WIRESHARK_VERSION: 4.4

jobs:
  check:
    name: Run checks on Ubuntu
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Update Stable Rust toolchain
        run: rustup update stable

      - name: Setup rust-cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-bin: false

      - name: Install dependencies
        run: |
          sudo apt install -y software-properties-common libssl-dev liblzma-dev
          sudo add-apt-repository -y ppa:wireshark-dev/stable
          sudo apt install -y wireshark-dev
          sudo apt install -y --allow-change-held-packages wireshark

      - name: openssl
        run: |
          git clone https://github.com/sfackler/rust-openssl
          cd rust-openssl
          cargo check

      - name: print version
        run: |
          wireshark --version
          openssl version
          apt list libssl-dev

      # - name: Code format check
      #   run: cargo fmt -- --check

      # - name: Bindgen Test
      #   run: cargo build -F bindgen

      # - name: Clippy
      #   run: cargo clippy --all-targets --all-features -- --deny warnings
      #
      # - name: Build
      #   run: cargo build
      #
      # - name: Place the plugin
      #   run: |
      #     mkdir -p ~/.local/lib/wireshark/plugins/${{ env.WIRESHARK_VERSION }}/epan
      #     cp ./target/debug/libzenoh_dissector.so ~/.local/lib/wireshark/plugins/${{ env.WIRESHARK_VERSION }}/epan/libzenoh_dissector.so
      #
      # - name: Test the sample data
      #   run: |
      #     sudo apt install -y tshark
      #     [ $(tshark -r assets/sample-data.pcap | grep Zenoh | wc -l) -eq 7 ] || return 1
